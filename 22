#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

#define MAX_PRODUCTS 5

struct Product {
    char nama[50];
    int harga;
    int jumlah;
};

// Fungsi untuk menampilkan daftar produk
void tampilkanProducts(struct Product products[]) {
    int i;
    printf("=====================================\n");
    printf("| No. | Nama Barang     | Harga     |\n");
    printf("=====================================\n");
    for (i = 0; i < MAX_PRODUCTS; i++) {
        printf("| %-3d | %-15s | Rp.%-6d |\n", i + 1, products[i].nama, products[i].harga);
    }
    printf("=====================================\n");
}

// Fungsi untuk menghitung total harga
int hitungTotal(struct Product products[]) {
    int total = 0;
    int i;
    for (i = 0; i < MAX_PRODUCTS; i++) {
        total += products[i].harga * products[i].jumlah;
    }
    return total;
}
// Fungsi untuk menghitung total diskon
int hitungDiskon(struct Product products[]) {
    int totalDiskon = 0;
    int i;
    for (i = 0; i < MAX_PRODUCTS; i++) {
        if (products[i].jumlah >= 3 && products[i].jumlah <= 5) {
            totalDiskon += (products[i].harga * products[i].jumlah) * 0.10;
        } else if (products[i].jumlah >= 5) {
            totalDiskon += (products[i].harga * products[i].jumlah) * 0.15;
        }
    }
    return totalDiskon;
}
// Fungsi untuk mengatur ulang jumlah pilihan produk
void resetPilihan(struct Product products[]) {
    int i;
    for (i = 0; i < MAX_PRODUCTS; i++) {
        products[i].jumlah = 0;
    }
}
// Fungsi untuk mengurutkan produk berdasarkan jumlahnya
void sortProducts(struct Product products[], int n) {
    int i, j;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (products[j].jumlah < products[j + 1].jumlah) {
                struct Product temp = products[j];
                products[j] = products[j + 1];
                products[j + 1] = temp;
            }
        }
    }
}
// Fungsi untuk mencetak struk pembayaran ke file
void cetakStrukPembayaran(struct Product products[], int uang, int idTransaksi) {
    char filename[100];
    FILE *receiptFile;

    time_t now = time(NULL);
    struct tm *tm_info = localtime(&now);

    // Buat nama file struk unik berdasarkan nomor transaksi
    sprintf(filename, "struk_%d.txt", idTransaksi);
    // Buka file struk
    receiptFile = fopen(filename, "w");
    if (receiptFile == NULL) {
        printf("Gagal membuat file struk.\n");
        return;
    }
    // Isi struk dengan informasi transaksi
    fprintf(receiptFile, "|========================================================================|\n");
    fprintf(receiptFile, "|                              Toko SKENSA                               |\n");
    fprintf(receiptFile, "|                 Jalan HOS Cokroaminoto No. 84 Denpasar                 |\n");
    fprintf(receiptFile, "|                                  Bali                                  |\n");
    fprintf(receiptFile, "|                           Telp : 082266551815                          |\n");
    fprintf(receiptFile, "| ID Struk : %d                                                          |\n", idTransaksi);
    fprintf(receiptFile, "|========================================================================|\n");

    int jumlahBarang = 0;
    for (int i = 0; i < MAX_PRODUCTS; i++) {
        if (products[i].jumlah > 0) {
            jumlahBarang++;
            break;
        }
    }

    if (jumlahBarang > 0) {
        fprintf(receiptFile, "|========================================================================|\n");
        fprintf(receiptFile, "| No. | Jumlah     | Nama Barang     | Harga    | Total harga    | Diskon|\n");
        fprintf(receiptFile, "|========================================================================|\n");

        for (int i = 0; i < MAX_PRODUCTS; i++) {
            if (products[i].jumlah > 0) {
                // Nyari subtotal & diskon khusus untuk rekap struk
                int subtotal = products[i].harga * products[i].jumlah;
                int diskon = 0;
                if (products[i].jumlah >= 3 && products[i].jumlah <= 5) {
                    diskon += (products[i].harga * products[i].jumlah) * 0.10;
                } else if (products[i].jumlah >= 5) {
                    diskon += (products[i].harga * products[i].jumlah) * 0.15;
                }
                fprintf(receiptFile, "| %-3d | %-9d | %-15s | Rp.%-6d | Rp.%-6d | Rp.%-7d |\n", i + 1, products[i].jumlah, products[i].nama, products[i].harga, subtotal, diskon);
            }
        }

        int totalHarga = hitungTotal(products);
        int totalDiskon = hitungDiskon(products);
        int totalBayar = totalHarga - totalDiskon;
        int uangPembayaran = uang;
        int kembalian = uangPembayaran - totalBayar;

        fprintf(receiptFile, "|========================================================================|\n");
        fprintf(receiptFile, "|                                                                        |\n");
        fprintf(receiptFile, "| Total Harga : %d                                                    |\n", totalHarga);
        fprintf(receiptFile, "| Total Diskon : %d                                                   |\n", totalDiskon);
        fprintf(receiptFile, "| Total Pembayaran : %d                                               |\n", totalBayar);
        fprintf(receiptFile, "| Uang Pembayaran : %d                                                |\n", uangPembayaran);
        fprintf(receiptFile, "| Kembalian : %d                                                       |\n", kembalian);
        fprintf(receiptFile, "| Waktu/Hari: %s", asctime(tm_info));
        fprintf(receiptFile, "|========================================================================|\n");
    }
    // Tutup file struk
    fclose(receiptFile);
}
// Fungsi untuk menampilkan struk pembayaran
void strukPembayaran(struct Product products[]) {
    int totalHarga, totalDiskon, totalPembayaran, i, uangBayar, kembalian;
    char confirm;

    sortProducts(products, MAX_PRODUCTS); // Panggil fungsi sortProducts sebelum mencetak struk

    totalHarga = hitungTotal(products);
    totalDiskon = hitungDiskon(products);
    totalPembayaran = totalHarga - totalDiskon;

    int jumlahBarang = 0;
    for (i = 0; i < MAX_PRODUCTS; i++) {
        if (products[i].jumlah > 0) {
            jumlahBarang++;
            break;
        }
    }

    if (jumlahBarang > 0) {
        printf("=============================================================================\n");
        printf("| No. | Jumlah     | Nama Barang     | Harga    | Total Harga    | Diskon   |\n");
        printf("=============================================================================\n");
        for (i = 0; i < MAX_PRODUCTS; i++) {
            if (products[i].jumlah > 0) {
                // Nyari subtotal & diskon khusus untuk rekap struk
                int subtotal = products[i].harga * products[i].jumlah;
                int diskon = 0;
                if (products[i].jumlah >= 3 && products[i].jumlah <= 5) {
                    diskon += (products[i].harga * products[i].jumlah) * 0.10;
                } else if (products[i].jumlah >= 5) {
                    diskon += (products[i].harga * products[i].jumlah) * 0.15;
                }
                printf("| %-3d | %-9d | %-15s | Rp.%-6d | Rp.%-6d | Rp.%-10d |\n", i + 1, products[i].jumlah, products[i].nama, products[i].harga, subtotal, diskon);
            }
        }
        printf("=============================================================================\n");

        printf("Yakin dengan pesanan anda? (y/n) : ");
        scanf(" %c", &confirm);

        if (confirm != 'Y' && confirm != 'y') {
            printf("\n\n");
            return;
        }

        printf("Total Harga : %d\n", totalHarga);
        printf("Total Pembayaran : %d\n", totalPembayaran);
        printf("Total Diskon : %d\n", totalDiskon);
        printf("=============================================================================\n\n");

        printf("Masukkan uang bayar : ");
        scanf("%d", &uangBayar);

        while (uangBayar < totalPembayaran) {
            printf("Uang anda kurang, silahkan masukkan uang tambahan : ");
            int tambahan;
            scanf("%d", &tambahan);
            uangBayar += tambahan;
        }

        kembalian = uangBayar - totalPembayaran;
        printf("Kembalian : Rp.%d\n", kembalian);

        cetakStrukPembayaran(products, uangBayar, (int)time(NULL));

        resetPilihan(products);
        printf("TERIMA KASIH SUDAH BERBELANJA!!\n\n");

    } else {
        printf("Anda belum memesan apapun!!\n\n");
    }
}

// Fungsi utama
int main() {
    struct Product products[MAX_PRODUCTS] = {
        {"Buku Tulis", 5000, 0},
        {"Pensil", 2000, 0},
        {"Penghapus", 1000, 0},
        {"Penggaris", 1000, 0},
        {"Bujur Sangkar", 500, 0}
    };
    int pilihan;

    srand((unsigned int)time(NULL)); // Seed untuk random number

    do {
        printf("SELAMAT DATANG DI TOKO SKENSA\n");
        printf("Silahkan pilih barang yang anda inginkan :\n\n");
        tampilkanProducts(products);

        printf("\n");
        printf("99. Struk Pembayaran\n");
        printf("55. Reset Pilihan\n");
        printf("00. Keluar\n\n");
        printf("=====================================\n\n");
        printf("Input pilihan yang anda inginkan : ");
        scanf("%d", &pilihan);

        if (pilihan >= 1 && pilihan <= MAX_PRODUCTS) {
             // Periksa apakah produk sudah ada dalam keranjang
            if (products[pilihan - 1].jumlah > 0) {
                // Jika sudah ada, tambahkan jumlah yang diminta ke jumlah yang sudah ada
                int tambahan;
                printf("Masukkan tambahan jumlah barang yang anda inginkan : ");
                scanf("%d", &tambahan);
                products[pilihan - 1].jumlah += tambahan;
            } else {
                // Jika belum ada, tambahkan produk baru
                printf("Masukkan jumlah barang yang anda inginkan : ");
                scanf("%d", &products[pilihan - 1].jumlah);
            }
            printf("%s berhasil ditambahkan ke keranjang!!\n\n", products[pilihan - 1].nama);
        } else if (pilihan == 99) {
            strukPembayaran(products);
        } else if (pilihan == 55) {
            resetPilihan(products);
        } else if (pilihan != 0) {
            printf("Input tidak valid, silahkan coba lagi!\n");
        }

    } while (pilihan != 0);

    return 0;
}
